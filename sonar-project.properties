# ===== Core =====
sonar.organization=gighive
sonar.projectKey=gighive_gighive
sonar.projectName=gighive
sonar.sourceEncoding=UTF-8

# ===== Sources (code + IaC you actually care about) =====
# Keep scope tight so Sonar focuses on real sources, not logs/state/artifacts.
sonar.sources=.
sonar.inclusions=\
ansible/**,\
terraform/**,\
*.sh,\
openapi.yaml,\
CHANGELOG.md,README.md,readme.txt

# ===== Exclusions (noise, secrets, generated/state, vendored stuff) =====
sonar.exclusions=\
**/vendor/**,\
**/node_modules/**,\
**/.venv/**,\
**/__pycache__/**,\
**/dist/**,\
**/build/**,\
**/*.min.js,\
**/*.map,\
**/coverage/**,\
# Terraform: state/plan/locks/hidden working dirs
**/.terraform/**,\
**/*.tfstate*,\
**/tfplan*,\
**/.terraform.lock.hcl,\
# Vars & env (often sensitive)
**/*.tfvars,\
azure.env,\
ansible/inventories/**/group_vars/**,\
# Logs, archives, binary/artifact files
**/*.log,\
**/*.zip,\
**/*.iso,\
ansible/ansible.log,\
# Old/backup/print/hardcode snapshots you keep for reference
**/*.orig,\
**/*.print,\
**/*.hardcode,\
# Big data/media that shouldn't count against code quality
**/*.mp3,\
**/*.mp4,\
**/video/**,\
**/unified_stormpigs_database.csv

# ===== Language specifics =====
# PHP (present under ansible/roles/docker/files/html* trees)
sonar.php.file.suffixes=.php
# JavaScript (present under apache html assets and scripts)
sonar.javascript.file.suffixes=.js,.jsx,.mjs
# TypeScript (if you add it later)
sonar.typescript.tsconfigPath=tsconfig.json

# Python (enable if/when .py files appear)
sonar.python.version=3.11
sonar.python.file.suffixes=.py

# Shell scripts (root *.sh and many under roles): no extra config required.

# YAML/Jinja2/Terraform/Dockerfiles are auto-detected by Sonar analyzers.

# ===== Tests & Coverage (hook these up when you have reports) =====
# sonar.tests=tests
# sonar.test.inclusions=tests/**
# sonar.php.coverage.reportPaths=coverage/php/coverage.xml
# sonar.javascript.lcov.reportPaths=coverage/js/lcov.info
# sonar.python.coverage.reportPaths=coverage/python/coverage.xml
